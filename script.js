const accounts = {
  "ARSEN123": "ARSENPDIDDY123",
  "MatviyVes": "TON618",
  "Timasueta": "SUETOLOG",
  "Tematiks": "Fdnfanatik",
  "Koyakolo": "GIGACHAD",
  "Aloharbitrahnik123": "ARBITRAJ3",
  "TESTAC": "TESTAC",
  "NAZARK": "Geometrydash1488",
  "Egoroblox": "undertale52",
  "SIGMA228": "KOT1488",
  "BABULKA777": "KOT52"
};

const promoCodesBase64 = {
  "TklDVVMxMjM=": {type:"once", reward:()=>{addBalance(250); alert("–û—Ç—Ä–∏–º–∞–Ω–æ 250 –Ω—ñ–∫—É—Å—ñ–≤!");}},
  "TklLVVM0NTY=": {type:"once", reward:()=>{addBalance(100); alert("–û—Ç—Ä–∏–º–∞–Ω–æ 100 –Ω—ñ–∫—É—Å—ñ–≤!");}},
  "S0FWSUsxNTk=": {type:"once", reward:()=>{addBalance(100); alert("–û—Ç—Ä–∏–º–∞–Ω–æ 100 –Ω—ñ–∫—É—Å—ñ–≤!");}},
  "TklDVVMwMDE=": {type:"once", reward:()=>{addBalance(100); alert("–û—Ç—Ä–∏–º–∞–Ω–æ 100 –Ω—ñ–∫—É—Å—ñ–≤!");}},
  "TklDVVMwMDI=": {type:"once", reward:()=>{addBalance(100); alert("–û—Ç—Ä–∏–º–∞–Ω–æ 100 –Ω—ñ–∫—É—Å—ñ–≤!");}},
  "TklDVVMwMDM=": {type:"once", reward:()=>{addBalance(100); alert("–û—Ç—Ä–∏–º–∞–Ω–æ 100 –Ω—ñ–∫—É—Å—ñ–≤!");}},
  "TklDVVMwMDQ=": {type:"once", reward:()=>{addBalance(100); alert("–û—Ç—Ä–∏–º–∞–Ω–æ 100 –Ω—ñ–∫—É—Å—ñ–≤!");}},
  "TklDVVMwMDU=": {type:"once", reward:()=>{addBalance(100); alert("–û—Ç—Ä–∏–º–∞–Ω–æ 100 –Ω—ñ–∫—É—Å—ñ–≤!");}},
  "TklDVVMwMDY=": {type:"once", reward:()=>{addBalance(100); alert("–û—Ç—Ä–∏–º–∞–Ω–æ 100 –Ω—ñ–∫—É—Å—ñ–≤!");}},
  "TklDVVMwMDc=": {type:"once", reward:()=>{addBalance(100); alert("–û—Ç—Ä–∏–º–∞–Ω–æ 100 –Ω—ñ–∫—É—Å—ñ–≤!");}},
  "Q0FTRTc4OQ==": {type:"once", reward:()=>{addCase("box"); alert("–û—Ç—Ä–∏–º–∞–Ω–æ –∫–µ–π—Å –ë–æ–∫—Å!");}},
  "R0lGVDY1NA==": {type:"once", reward:()=>{addCase("gift"); alert("–û—Ç—Ä–∏–º–∞–Ω–æ –ø–æ–¥–∞—Ä—É–Ω–∫–æ–≤–∏–π –∫–µ–π—Å!");}},
  "Qk9YMzIx": {type:"unlimited", reward:()=>{addCase("box"); alert("–û—Ç—Ä–∏–º–∞–Ω–æ –∫–µ–π—Å –ë–æ–∫—Å!");}},
  "TU9ORVk5ODc=": {type:"unlimited", reward:()=>{addBalance(1000); alert("–û—Ç—Ä–∏–º–∞–Ω–æ 1000 –Ω—ñ–∫—É—Å—ñ–≤!");}},
  "UkVBTEdJUlQ=": {type:"unlimited", reward:()=>{addCase("gift"); alert("–û—Ç—Ä–∏–º–∞–Ω–æ –ø–æ–¥–∞—Ä—É–Ω–∫–æ–≤–∏–π –∫–µ–π—Å!");}}
};

function b64ToStr(b64) {
  return decodeURIComponent(escape(window.atob(b64)));
}

function strToB64(str) {
  return window.btoa(unescape(encodeURIComponent(str)));
}

let currentUser = null;
let balance = 0;
let inventory = [];
let usedPromos = [];
let blockedItems = new Set();
let cart = [];

function addBalance(amount) {
  balance += amount;
  saveData();
}

function saveData() {
  if (currentUser) {
    localStorage.setItem(currentUser + "_balance", balance);
    localStorage.setItem(currentUser + "_inventory", JSON.stringify(inventory));
    localStorage.setItem(currentUser + "_usedPromos", JSON.stringify(usedPromos));
    localStorage.setItem(currentUser + "_blockedItems", JSON.stringify(Array.from(blockedItems)));
    localStorage.setItem(currentUser + "_cart", JSON.stringify(cart));
  }
}

function loadData() {
  if (currentUser) {
    balance = parseInt(localStorage.getItem(currentUser + "_balance")) || 0;
    inventory = JSON.parse(localStorage.getItem(currentUser + "_inventory")) || [];
    usedPromos = JSON.parse(localStorage.getItem(currentUser + "_usedPromos")) || [];
    blockedItems = new Set(JSON.parse(localStorage.getItem(currentUser + "_blockedItems")) || []);
    cart = JSON.parse(localStorage.getItem(currentUser + "_cart")) || [];
  }
}

function loginScreen() {
  document.getElementById("app").innerHTML =
    `<h2>–í—Ö—ñ–¥ —É –∞–∫–∞—É–Ω—Ç</h2>
     <input id='login' placeholder='–õ–æ–≥—ñ–Ω'><br>
     <input id='password' placeholder='–ü–∞—Ä–æ–ª—å' type='password'><br>
     <button onclick='login()'>–£–≤—ñ–π—Ç–∏</button>`;
}

function login() {
  const login = document.getElementById("login").value.trim();
  const pass = document.getElementById("password").value;
  if (accounts[login] === pass) {
    currentUser = login;
    loadData();
    mainMenu();
  } else {
    alert("–ù–µ–≤—ñ—Ä–Ω–∏–π –ª–æ–≥—ñ–Ω –∞–±–æ –ø–∞—Ä–æ–ª—å");
  }
}

function logout() {
  saveData();
  currentUser = null;
  loginScreen();
}

function mainMenu() {
  saveData();
  let html = `<h2>–í—ñ—Ç–∞—é, ${currentUser}</h2>`;
  html += `<p>–ë–∞–ª–∞–Ω—Å: ${balance} –Ω—ñ–∫—É—Å—ñ–≤</p>`;
  html += `<div style="display:flex; flex-wrap:wrap; justify-content:center;">`;
  html += `
    <div style="margin: 10px;">
      <img src="img/case_autumn.png" width="150"><br>
      <button onclick='buyCase("autumn")'>–ö–µ–π—Å –û—Å—ñ–Ω—å25 (40)</button>
    </div>
    <div style="margin: 10px;">
      <img src="img/case_box.png" width="150"><br>
      <button onclick='buyCase("box")'>–ë–æ–∫—Å –û—Å—ñ–Ω—å25 (20)</button>
    </div>
    <div style="margin: 10px;">
      <img src="img/case_gift.png" width="150"><br>
      <button disabled>–ü–æ–¥–∞—Ä—É–Ω–∫–æ–≤–∏–π –∫–µ–π—Å (–¢—ñ–ª—å–∫–∏ —á–µ—Ä–µ–∑ –ø—Ä–æ–º–æ-–∫–æ–¥)</button><br>
      <small>–û–¥–Ω–æ—Ä–∞–∑–æ–≤–∏–π –ø—Ä–æ–º–æ-–∫–æ–¥: GIFT654</small><br>
      <small style="user-select:none; color:#331f00;">–ë–∞–≥–∞—Ç–æ—Ä–∞–∑–æ–≤–∏–π –ø—Ä–æ–º–æ-–∫–æ–¥ (—Å–µ–∫—Ä–µ—Ç–Ω–∏–π): MONEY987</small>
    </div>
  `;
  html += `</div><br>`;
  html += `<button onclick='goToPromoMenu()'>üéÅ –í—ñ–¥–∫—Ä–∏—Ç–∏ –º–µ–Ω—é –ø—Ä–æ–º–æ-–∫–æ–¥—ñ–≤</button><br>`;
  html += `<button onclick='showInventory()'>üéí –Ü–Ω–≤–µ–Ω—Ç–∞—Ä (${inventory.length})</button><br>`;
  html += `<button onclick='showCart()'>üõí –ö–æ—à–∏–∫ (${cart.length})</button><br>`;
  html += `<button onclick='logout()'>üö™ –í–∏–π—Ç–∏</button>`;
  document.getElementById("app").innerHTML = html;
}

function addCase(type) {
  if (inventory.length >= 100) {
    alert("–Ü–Ω–≤–µ–Ω—Ç–∞—Ä –∑–∞–ø–æ–≤–Ω–µ–Ω–∏–π!");
    return;
  }
  inventory.push({ type: "case", caseType: type, id: generateId() });
  saveData();
}

function buyCase(type) {
  const price = type === "autumn" ? 40 : type === "box" ? 20 : 0;
  if (balance < price) {
    alert("–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –Ω—ñ–∫—É—Å—ñ–≤!");
    return;
  }
  balance -= price;
  addCase(type);
  saveData();
  mainMenu();
}

function showInventory() {
  let html = `<h2>–Ü–Ω–≤–µ–Ω—Ç–∞—Ä</h2>`;
  if (inventory.length === 0) {
    html += `<p>–Ü–Ω–≤–µ–Ω—Ç–∞—Ä –ø–æ—Ä–æ–∂–Ω—ñ–π.</p>`;
  } else {
    html += `<div style="display:flex; flex-wrap:wrap; justify-content:center;">`;
    inventory.forEach((item, idx) => {
      const isBlocked = blockedItems.has(item.id);
      if (item.type === "case") {
        html += `
          <div style="border:1px solid #999; margin:10px; padding:10px; width:150px; text-align:center;">
            <b>–ö–µ–π—Å: ${getCaseName(item.caseType)}</b><br />
            <img src="img/case_${item.caseType}.png" width="120" /><br />
            <button onclick="openCase(${idx})" ${isBlocked ? "disabled" : ""}>–í—ñ–¥–∫—Ä–∏—Ç–∏</button><br />
            <button onclick="toggleBlockItem(${idx}); event.stopPropagation();">
              ${isBlocked ? "–†–æ–∑–±–ª–æ–∫—É–≤–∞—Ç–∏" : "–ó–∞–±–ª–æ–∫—É–≤–∞—Ç–∏"}
            </button><br />
            <button onclick="addToCart(${idx}); event.stopPropagation();" ${isBlocked ? "disabled" : ""}>–î–æ–¥–∞—Ç–∏ –≤ –∫–æ—à–∏–∫</button><br />
            <button onclick="deleteItem(${idx}); event.stopPropagation();" style="margin-top:5px;">–í–∏–¥–∞–ª–∏—Ç–∏</button>
          </div>
        `;
      } else if (item.type === "bill") {
        const premium = item.premium ? "üåü–ü—Ä–µ–º—ñ—É–º" : "";
        html += `
          <div style="border:1px solid #999; margin:10px; padding:10px; width:150px; text-align:center; cursor:pointer;">
            <img src="img/${item.img}" width="120" /><br />
            <b>${item.name}</b><br />
            <i>${item.rarity}</i><br />
            –Ø–∫—ñ—Å—Ç—å: ${item.quality} ${premium}<br />
            <button onclick="toggleBlockItem(${idx}); event.stopPropagation();">
              ${isBlocked ? "–†–æ–∑–±–ª–æ–∫—É–≤–∞—Ç–∏" : "–ó–∞–±–ª–æ–∫—É–≤–∞—Ç–∏"}
            </button><br />
            <button onclick="addToCart(${idx}); event.stopPropagation();" ${isBlocked ? "disabled" : ""}>–î–æ–¥–∞—Ç–∏ –≤ –∫–æ—à–∏–∫</button><br />
            <button onclick="deleteItem(${idx}); event.stopPropagation();" style="margin-top:5px;">–í–∏–¥–∞–ª–∏—Ç–∏</button>
          </div>
        `;
      }
    });
    html += `</div>`;
  }
  html += `<br /><button onclick="mainMenu()">‚Üê –ù–∞–∑–∞–¥</button>`;
  document.getElementById("app").innerHTML = html;
}

function toggleBlockItem(index) {
  if (index < 0 || index >= inventory.length) return;
  const item = inventory[index];
  if (blockedItems.has(item.id)) {
    blockedItems.delete(item.id);
  } else {
    blockedItems.add(item.id);
  }
  saveData();
  showInventory();
}

function addToCart(index) {
  if (index < 0 || index >= inventory.length) return;
  const item = inventory[index];
  if (blockedItems.has(item.id)) {
    alert("–¶–µ–π –ø—Ä–µ–¥–º–µ—Ç –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ —ñ –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –¥–æ–¥–∞–Ω–∏–π –¥–æ –∫–æ—à–∏–∫–∞.");
    return;
  }
  if (cart.length >= 50) {
    alert("–ö–æ—à–∏–∫ –∑–∞–ø–æ–≤–Ω–µ–Ω–∏–π!");
    return;
  }
  cart.push(item);
  inventory.splice(index, 1);
  saveData();
  showInventory();
  showCart();
}

function showCart() {
  let html = `<h2>–ö–æ—à–∏–∫</h2>`;
  if (cart.length === 0) {
    html += `<p>–ö–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π.</p>`;
  } else {
    html += `<div style="display:flex; flex-wrap:wrap; justify-content:center;">`;
    cart.forEach((item, idx) => {
      const isBlocked = blockedItems.has(item.id);
      if (item.type === "case") {
        html += `
          <div style="border:1px solid #999; margin:10px; padding:10px; width:150px; text-align:center;">
            <b>–ö–µ–π—Å: ${getCaseName(item.caseType)}</b><br />
            <img src="img/case_${item.caseType}.png" width="120" /><br />
            <button onclick="restoreFromCart(${idx})">–ü–æ–≤–µ—Ä–Ω—É—Ç–∏</button><br />
          </div>
        `;
      } else if (item.type === "bill") {
        const premium = item.premium ? "üåü–ü—Ä–µ–º—ñ—É–º" : "";
        html += `
          <div style="border:1px solid #999; margin:10px; padding:10px; width:150px; text-align:center; cursor:pointer;">
            <img src="img/${item.img}" width="120" /><br />
            <b>${item.name}</b><br />
            <i>${item.rarity}</i><br />
            –Ø–∫—ñ—Å—Ç—å: ${item.quality} ${premium}<br />
            <button onclick="restoreFromCart(${idx})">–ü–æ–≤–µ—Ä–Ω—É—Ç–∏</button><br />
          </div>
        `;
      }
    });
    html += `</div>`;
  }
  html += `<br /><button onclick="mainMenu()">‚Üê –ù–∞–∑–∞–¥</button>`;
  document.getElementById("app").innerHTML = html;
}

function restoreFromCart(index) {
  if (index < 0 || index >= cart.length) return;
  const item = cart[index];
  if (inventory.length >= 100) {
    alert("–Ü–Ω–≤–µ–Ω—Ç–∞—Ä –∑–∞–ø–æ–≤–Ω–µ–Ω–∏–π!");
    return;
  }
  inventory.push(item);
  cart.splice(index, 1);
  saveData();
  showCart();
  showInventory();
}

function deleteItem(index) {
  if (index < 0 || index >= inventory.length) return;
  if (confirm("–í–∏–¥–∞–ª–∏—Ç–∏ —Ü–µ–π –ø—Ä–µ–¥–º–µ—Ç?")) {
    inventory.splice(index, 1);
    saveData();
    showInventory();
  }
}

function getCaseName(type) {
  if (type === "autumn") return "–û—Å—ñ–Ω—å25";
  if (type === "box") return "–ë–æ–∫—Å";
  if (type === "gift") return "–ü–æ–¥–∞—Ä—É–Ω–æ–∫";
  return "–ö–µ–π—Å";
}

function getDropPool(type) {
  if (type === "autumn") return [
    { name: "–ü–∞—Å—Ö–∞–ª–æ—á–Ω—ñ–∫", rarity: "–ó–≤–∏—á–∞–π–Ω–∞", img: "green1.png", chance: 25 },
    { name: "–Ñ–Ω–æ—Ç", rarity: "–ó–≤–∏—á–∞–π–Ω–∞", img: "green2.png", chance: 25 },
    { name: "–•–∞–º—Å—Ç–µ—Ä", rarity: "–í–∏–Ω—è—Ç–∫–æ–≤–∞", img: "blue1.png", chance: 17.5 },
    { name: "–°–∞—Ç–∞–Ω–∞", rarity: "–í–∏–Ω—è—Ç–∫–æ–≤–∞", img: "blue2.png", chance: 17.5 },
    { name: "–í–æ–ª—Ç–µ—Ä –í–∞–π—Ç", rarity: "–ï–ø—ñ—á–Ω–∞", img: "purple1.png", chance: 7 },
    { name: "–°—ñ–≥–º–∞", rarity: "–ï–ø—ñ—á–Ω–∞", img: "purple2.png", chance: 7 },
    { name: "–ë–æ–º–±–æ—Ä–¥—ñ—Ä–æ", rarity: "–°–µ–∫—Ä–µ—Ç–Ω–∞", img: "red1.png", chance: 1 }
  ];
  else if (type === "box")
    return getDropPool("autumn").filter(x => x.rarity !== "–°–µ–∫—Ä–µ—Ç–Ω–∞");
  else if (type === "gift") return [
    { name: "–¢—Ä–∞–ª–∞–ª–µ—Ä–æ", rarity: "–°–µ–∫—Ä–µ—Ç–Ω–∞", img: "red2.png", chance: 50 },
    { name: "–¢—É–Ω–≥-–°–∞—Ö—É—Ä", rarity: "–°–µ–∫—Ä–µ—Ç–Ω–∞", img: "red3.png", chance: 50 }
  ];
  else return [];
}

function weightedRandom(items) {
  let total = 0;
  items.forEach(i => total += i.chance);
  let rand = Math.random() * total;
  for (let i = 0; i < items.length; i++) {
    if (rand < items[i].chance) return items[i];
    rand -= items[i].chance;
  }
  return items[items.length - 1];
}

function getQuality() {
  const qualities = [
    { name: "–ü—Ä—è–º–æ –∑ —Ü–µ—Ö—É", chance: 12.5 },
    { name: "–ü—ñ—Å–ª—è –∫–æ–Ω—Å–µ—Ä–≤–∞—Ü—ñ—ó", chance: 25 },
    { name: "–ü—ñ—Å–ª—è —É—Ä–æ–∫—É", chance: 40 },
    { name: "–ó–Ω–æ—à–µ–Ω–∞", chance: 22.5 }
  ];
  let rand = Math.random() * 100;
  for (let q of qualities) {
    if (rand < q.chance) return q.name;
    rand -= q.chance;
  }
  return qualities[qualities.length - 1].name;
}

function openCase(index) {
  if (index < 0 || index >= inventory.length) return;
  const item = inventory[index];
  if (item.type !== "case") {
    alert("–¶–µ –Ω–µ –∫–µ–π—Å!");
    return;
  }
  if (blockedItems.has(item.id)) {
    alert("–¶–µ–π –∫–µ–π—Å –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ!");
    return;
  }
  const caseType = item.caseType;
  const pool = getDropPool(caseType);
  const selected = weightedRandom(pool);
  const quality = getQuality();
  const premiumChance = 0.02;
  const premium = quality !== "–ó–Ω–æ—à–µ–Ω–∞" && Math.random() < premiumChance;

  inventory.splice(index, 1);

  inventory.push({
    type: "bill",
    name: selected.name,
    rarity: selected.rarity,
    img: selected.img,
    quality,
    premium,
    id: generateId()
  });
  saveData();
  showInventory();
  alert(`–í–∏–ø–∞–ª–æ: ${selected.name}\n–†—ñ–¥–∫—ñ—Å—Ç—å: ${selected.rarity}\n–Ø–∫—ñ—Å—Ç—å: ${quality}${premium ? "\nüåü –ü—Ä–µ–º—ñ—É–º!" : ""}`);
}

function generateId() {
  return Math.random().toString(36).substring(2, 10);
}

function goToPromoMenu() {
  document.getElementById("app").innerHTML = `
    <h2>–í–≤–µ–¥—ñ—Ç—å –ø—Ä–æ–º–æ-–∫–æ–¥</h2>
    <input id="promoInput" placeholder="–ü—Ä–æ–º–æ-–∫–æ–¥" /><br />
    <button onclick="applyPromo()">–ê–∫—Ç–∏–≤—É–≤–∞—Ç–∏</button><br /><br />
    <button onclick="mainMenu()">‚Üê –ù–∞–∑–∞–¥</button>
  `;
}

function applyPromo() {
  const promo = document.getElementById("promoInput").value.trim();
  if (!promo) {
    alert("–í–≤–µ–¥—ñ—Ç—å –ø—Ä–æ–º–æ-–∫–æ–¥!");
    return;
  }
  const promoB64 = strToB64(promo.toUpperCase());
  const promoData = promoCodesBase64[promoB64];
  if (!promoData) {
    alert("–ù–µ–≤—ñ—Ä–Ω–∏–π –ø—Ä–æ–º–æ-–∫–æ–¥.");
    return;
  }
  if (promoData.type === "once" && usedPromos.includes(promoB64)) {
    alert("–¶–µ–π –ø—Ä–æ–º–æ-–∫–æ–¥ –≤–∂–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ.");
    return;
  }
  promoData.reward();
  if (promoData.type === "once") {
    usedPromos.push(promoB64);
  }
  saveData();
  mainMenu();
}

// –ü–æ—á–∞—Ç–∫–æ–≤–∏–π –µ–∫—Ä–∞–Ω
loginScreen();
