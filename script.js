const accounts = {
  "ARSEN123": "ARSENPDIDDY123",
  "MatviyVes": "TON618",
  "Timasueta": "SUETOLOG",
  "Tematiks": "Fdnfanatik",
  "Koyakolo": "GIGACHAD",
  "Aloharbitrahnik123": "ARBITRAJ3",
  "TESTAC": "TESTAC",
  "NAZARK": "Geometrydash1488",
  "Egoroblox": "undertale52",
  "SIGMA228": "KOT1488",
  "BABULKA777": "KOT52"
};

const promoCodesBase64 = {
  "TklDVVMxMjM=": {type:"once", reward:()=>{addBalance(250); alert("–û—Ç—Ä–∏–º–∞–Ω–æ 250 –Ω—ñ–∫—É—Å—ñ–≤!");}},
  "TklLVVM0NTY=": {type:"once", reward:()=>{addBalance(100); alert("–û—Ç—Ä–∏–º–∞–Ω–æ 100 –Ω—ñ–∫—É—Å—ñ–≤!");}},
  "S0FWSUsxNTk=": {type:"once", reward:()=>{addBalance(100); alert("–û—Ç—Ä–∏–º–∞–Ω–æ 100 –Ω—ñ–∫—É—Å—ñ–≤!");}},
  "TklDVVMwMDE=": {type:"once", reward:()=>{addBalance(100); alert("–û—Ç—Ä–∏–º–∞–Ω–æ 100 –Ω—ñ–∫—É—Å—ñ–≤!");}},
  "TklDVVMwMDI=": {type:"once", reward:()=>{addBalance(100); alert("–û—Ç—Ä–∏–º–∞–Ω–æ 100 –Ω—ñ–∫—É—Å—ñ–≤!");}},
  "TklDVVMwMDM=": {type:"once", reward:()=>{addBalance(100); alert("–û—Ç—Ä–∏–º–∞–Ω–æ 100 –Ω—ñ–∫—É—Å—ñ–≤!");}},
  "TklDVVMwMDQ=": {type:"once", reward:()=>{addBalance(100); alert("–û—Ç—Ä–∏–º–∞–Ω–æ 100 –Ω—ñ–∫—É—Å—ñ–≤!");}},
  "TklDVVMwMDU=": {type:"once", reward:()=>{addBalance(100); alert("–û—Ç—Ä–∏–º–∞–Ω–æ 100 –Ω—ñ–∫—É—Å—ñ–≤!");}},
  "TklDVVMwMDY=": {type:"once", reward:()=>{addBalance(100); alert("–û—Ç—Ä–∏–º–∞–Ω–æ 100 –Ω—ñ–∫—É—Å—ñ–≤!");}},
  "TklDVVMwMDc=": {type:"once", reward:()=>{addBalance(100); alert("–û—Ç—Ä–∏–º–∞–Ω–æ 100 –Ω—ñ–∫—É—Å—ñ–≤!");}},
  "Q0FTRTc4OQ==": {type:"once", reward:()=>{addCase("box"); alert("–û—Ç—Ä–∏–º–∞–Ω–æ –∫–µ–π—Å –ë–æ–∫—Å!");}},
  "R0lGVDY1NA==": {type:"once", reward:()=>{addCase("gift"); alert("–û—Ç—Ä–∏–º–∞–Ω–æ –ø–æ–¥–∞—Ä—É–Ω–∫–æ–≤–∏–π –∫–µ–π—Å!");}},
  "Qk9YMzIx": {type:"unlimited", reward:()=>{addCase("box"); alert("–û—Ç—Ä–∏–º–∞–Ω–æ –∫–µ–π—Å –ë–æ–∫—Å!");}},
  "TU9ORVk5ODc=": {type:"unlimited", reward:()=>{addBalance(1000); alert("–û—Ç—Ä–∏–º–∞–Ω–æ 1000 –Ω—ñ–∫—É—Å—ñ–≤!");}},
  "VU5HSUZUMTQ4OA==": {type:"unlimited", reward:()=>{addCase("gift"); alert("–û—Ç—Ä–∏–º–∞–Ω–æ –ø–æ–¥–∞—Ä—É–Ω–∫–æ–≤–∏–π –∫–µ–π—Å!");}}
};

let currentUser = null;
let balance = 0;
let inventory = [];
let usedPromos = [];
let blockedItems = new Set();

function saveData() {
  if (!currentUser) return;
  localStorage.setItem(currentUser + "_balance", balance);
  localStorage.setItem(currentUser + "_inventory", JSON.stringify(inventory));
  localStorage.setItem(currentUser + "_usedPromos", JSON.stringify(usedPromos));
  localStorage.setItem(currentUser + "_blockedItems", JSON.stringify(Array.from(blockedItems)));
}
function loadData() {
  if (!currentUser) return;
  balance = parseInt(localStorage.getItem(currentUser + "_balance")) || 0;
  inventory = JSON.parse(localStorage.getItem(currentUser + "_inventory")) || [];
  usedPromos = JSON.parse(localStorage.getItem(currentUser + "_usedPromos")) || [];
  blockedItems = new Set(JSON.parse(localStorage.getItem(currentUser + "_blockedItems")) || []);
}

function addBalance(amount) {
  balance += amount;
  saveData();
}

function generateId() {
  return Math.random().toString(36).substring(2, 9);
}

function strToB64(str) {
  return window.btoa(unescape(encodeURIComponent(str)));
}

function b64ToStr(b64) {
  return decodeURIComponent(escape(window.atob(b64)));
}

function loginScreen() {
  document.getElementById("app").innerHTML = `
    <h2>–í—Ö—ñ–¥ —É –∞–∫–∞—É–Ω—Ç</h2>
    <input id="login" placeholder="–õ–æ–≥—ñ–Ω" /><br />
    <input id="password" placeholder="–ü–∞—Ä–æ–ª—å" type="password" /><br />
    <button onclick="login()">–£–≤—ñ–π—Ç–∏</button>
  `;
}

function login() {
  const loginVal = document.getElementById("login").value.trim();
  const passVal = document.getElementById("password").value;
  if(accounts[loginVal] && accounts[loginVal] === passVal){
    currentUser = loginVal;
    loadData();
    mainMenu();
  } else {
    alert("–ù–µ–≤—ñ—Ä–Ω–∏–π –ª–æ–≥—ñ–Ω –∞–±–æ –ø–∞—Ä–æ–ª—å");
  }
}

function logout() {
  saveData();
  currentUser = null;
  balance = 0;
  inventory = [];
  usedPromos = [];
  blockedItems.clear();
  loginScreen();
}

function mainMenu() {
  saveData();
  let html = `<h2>–í—ñ—Ç–∞—é, ${currentUser}</h2>`;
  html += `<p>–ë–∞–ª–∞–Ω—Å: ${balance} –Ω—ñ–∫—É—Å—ñ–≤</p>`;
  html += `
    <div style="display:flex; gap:20px; justify-content:center; flex-wrap:wrap;">
      <div style="text-align:center;">
        <img src="img/case_autumn.png" width="150" /><br/>
        <button onclick="buyCase('autumn')">–ö–µ–π—Å –û—Å—ñ–Ω—å25 (40 –Ω—ñ–∫—É—Å—ñ–≤)</button>
      </div>
      <div style="text-align:center;">
        <img src="img/case_box.png" width="150" /><br/>
        <button onclick="buyCase('box')">–ë–æ–∫—Å –û—Å—ñ–Ω—å25 (20 –Ω—ñ–∫—É—Å—ñ–≤)</button>
      </div>
      <div style="text-align:center;">
        <img src="img/case_gift.png" width="150" /><br/>
        <button disabled>–ü–æ–¥–∞—Ä—É–Ω–∫–æ–≤–∏–π –∫–µ–π—Å (–¢—ñ–ª—å–∫–∏ —á–µ—Ä–µ–∑ –ø—Ä–æ–º–æ-–∫–æ–¥)</button><br/>
        <small>–ü—Ä–æ–º–æ–∫–æ–¥ –¥–ª—è –ø–æ–¥–∞—Ä—É–Ω–∫–æ–≤–æ–≥–æ –∫–µ–π—Å–∞: UNGIFT1488</small>
      </div>
    </div>
    <br />
    <button onclick="promoMenu()">üéÅ –í–≤–µ—Å—Ç–∏ –ø—Ä–æ–º–æ–∫–æ–¥</button><br/>
    <button onclick="showInventory()">üéí –Ü–Ω–≤–µ–Ω—Ç–∞—Ä (${inventory.length})</button><br/>
    <button onclick="logout()">üö™ –í–∏–π—Ç–∏</button>
  `;
  document.getElementById("app").innerHTML = html;
}

function buyCase(type){
  const cost = type === "autumn" ? 40 : (type === "box" ? 20 : 0);
  if(balance < cost){
    alert("–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –Ω—ñ–∫—É—Å—ñ–≤!");
    return;
  }
  balance -= cost;
  addCase(type);
  saveData();
  mainMenu();
}

function addCase(type){
  if(inventory.length >= 100){
    alert("–Ü–Ω–≤–µ–Ω—Ç–∞—Ä –∑–∞–ø–æ–≤–Ω–µ–Ω–∏–π!");
    return;
  }
  inventory.push({id: generateId(), type: "case", caseType: type});
  saveData();
}

function showInventory(){
  let html = `<h2>–Ü–Ω–≤–µ–Ω—Ç–∞—Ä</h2>`;
  if(inventory.length === 0){
    html += `<p>–Ü–Ω–≤–µ–Ω—Ç–∞—Ä –ø–æ—Ä–æ–∂–Ω—ñ–π.</p>`;
  } else {
    html += `<div style="display:flex; flex-wrap:wrap; gap:15px; justify-content:center;">`;
    inventory.forEach((item, idx) => {
      const isBlocked = blockedItems.has(item.id);
      if(item.type === "case"){
        html += `
          <div style="border:1px solid #999; padding:10px; width:150px; text-align:center;">
            <b>–ö–µ–π—Å: ${getCaseName(item.caseType)}</b><br/>
            <img src="img/case_${item.caseType}.png" width="120" /><br/>
            <button onclick="openCase(${idx})" ${isBlocked ? "disabled" : ""}>–í—ñ–¥–∫—Ä–∏—Ç–∏</button><br/>
            <button onclick="toggleBlock(${idx}); event.stopPropagation();">${isBlocked ? "–†–æ–∑–±–ª–æ–∫—É–≤–∞—Ç–∏" : "–ó–∞–±–ª–æ–∫—É–≤–∞—Ç–∏"}</button><br/>
            <button onclick="deleteItem(${idx}); event.stopPropagation();" ${isBlocked ? "disabled" : ""} style="margin-top:5px;">–í–∏–¥–∞–ª–∏—Ç–∏</button>
          </div>
        `;
      } else if(item.type === "item"){
        html += `
          <div style="border:1px solid #666; padding:10px; width:140px; text-align:center; background:#222; color:#fff;">
            <b>${item.name}</b><br/>
            <img src="img/${item.img}" width="120" /><br/>
            <small>${item.rarity}</small><br/>
            <button onclick="toggleBlock(${idx}); event.stopPropagation();">${isBlocked ? "–†–æ–∑–±–ª–æ–∫—É–≤–∞—Ç–∏" : "–ó–∞–±–ª–æ–∫—É–≤–∞—Ç–∏"}</button><br/>
            <button onclick="deleteItem(${idx}); event.stopPropagation();" ${isBlocked ? "disabled" : ""} style="margin-top:5px;">–í–∏–¥–∞–ª–∏—Ç–∏</button>
          </div>
        `;
      }
    });
    html += "</div>";
  }
  html += `<br/><button onclick="mainMenu()">–ù–∞–∑–∞–¥</button>`;
  document.getElementById("app").innerHTML = html;
}

function toggleBlock(idx){
  if(!inventory[idx]) return;
  const id = inventory[idx].id;
  if(blockedItems.has(id)) blockedItems.delete(id);
  else blockedItems.add(id);
  saveData();
  showInventory();
}

function deleteItem(idx){
  if(!inventory[idx]) return;
  const id = inventory[idx].id;
  if(blockedItems.has(id)){
    alert("–ù–µ–º–æ–∂–ª–∏–≤–æ –≤–∏–¥–∞–ª–∏—Ç–∏ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∏–π –ø—Ä–µ–¥–º–µ—Ç!");
    return;
  }
  inventory.splice(idx, 1);
  saveData();
  showInventory();
}

function getCaseName(type){
  if(type === "autumn") return "–û—Å—ñ–Ω—å25";
  if(type === "box") return "–ë–æ–∫—Å";
  if(type === "gift") return "–ü–æ–¥–∞—Ä—É–Ω–∫–æ–≤–∏–π –∫–µ–π—Å";
  return "–ù–µ–≤—ñ–¥–æ–º–∏–π –∫–µ–π—Å";
}

function openCase(idx){
  if(!inventory[idx]) return;
  const item = inventory[idx];
  if(item.type !== "case") return;

  let drop = null;
  if(item.caseType === "autumn") drop = dropAutumnCase();
  else if(item.caseType === "box") drop = dropBoxCase();
  else if(item.caseType === "gift") drop = dropGiftCase();

  if(drop){
    inventory.splice(idx, 1);
    inventory.push(drop);
    saveData();
    alert(`–í–∞–º –≤–∏–ø–∞–ª–æ: ${drop.name} (${drop.rarity})`);
    showInventory();
  }
}

function dropByRates(rates){
  const r = Math.random();
  let sum = 0;
  for(const key in rates){
    sum += rates[key];
    if(r < sum) return key;
  }
  return "common";
}

function dropAutumnCase(){
  const rates = { secret:0.01, epic:0.14, exceptional:0.35, common:0.50 };
  const rarity = dropByRates(rates);
  if(rarity === "secret") return {name:"–ë–æ–º–±–æ—Ä–¥—ñ—Ä–æ", img:"red1.png", rarity:"–°–µ–∫—Ä–µ—Ç–Ω–∞", type:"item", id:generateId()};
  if(rarity === "epic") return [{name:"–í–æ–ª—Ç–µ—Ä –í–∞–π—Ç", img:"purple1.png", rarity:"–ï–ø—ñ—á–Ω–∞", type:"item", id:generateId()}, {name:"–°—ñ–≥–º–∞", img:"purple2.png", rarity:"–ï–ø—ñ—á–Ω–∞", type:"item", id:generateId()}][Math.floor(Math.random()*2)];
  if(rarity === "exceptional") return [{name:"–°–∞—Ç–∞–Ω–∞", img:"blue2.png", rarity:"–í–∏–Ω—è—Ç–∫–æ–≤–∞", type:"item", id:generateId()}, {name:"–•–∞–º—Å—Ç–µ—Ä", img:"blue1.png", rarity:"–í–∏–Ω—è—Ç–∫–æ–≤–∞", type:"item", id:generateId()}][Math.floor(Math.random()*2)];
  return [{name:"–ü–∞—Å—Ö–∞–ª–æ—á–Ω–∏–∫", img:"green1.png", rarity:"–ó–≤–∏—á–∞–π–Ω–∞", type:"item", id:generateId()}, {name:"–Ñ–Ω–æ—Ç", img:"green2.png", rarity:"–ó–≤–∏—á–∞–π–Ω–∞", type:"item", id:generateId()}][Math.floor(Math.random()*2)];
}

function dropBoxCase(){
  const rates = { secret:0, epic:0.14, exceptional:0.35, common:0.51 };
  const rarity = dropByRates(rates);
  if(rarity === "epic") return [{name:"–í–æ–ª—Ç–µ—Ä –í–∞–π—Ç", img:"purple1.png", rarity:"–ï–ø—ñ—á–Ω–∞", type:"item", id:generateId()}, {name:"–°—ñ–≥–º–∞", img:"purple2.png", rarity:"–ï–ø—ñ—á–Ω–∞", type:"item", id:generateId()}][Math.floor(Math.random()*2)];
  if(rarity === "exceptional") return [{name:"–°–∞—Ç–∞–Ω–∞", img:"blue2.png", rarity:"–í–∏–Ω—è—Ç–∫–æ–≤–∞", type:"item", id:generateId()}, {name:"–•–∞–º—Å—Ç–µ—Ä", img:"blue1.png", rarity:"–í–∏–Ω—è—Ç–∫–æ–≤–∞", type:"item", id:generateId()}][Math.floor(Math.random()*2)];
  return [{name:"–ü–∞—Å—Ö–∞–ª–æ—á–Ω–∏–∫", img:"green1.png", rarity:"–ó–≤–∏—á–∞–π–Ω–∞", type:"item", id:generateId()}, {name:"–Ñ–Ω–æ—Ç", img:"green2.png", rarity:"–ó–≤–∏—á–∞–π–Ω–∞", type:"item", id:generateId()}][Math.floor(Math.random()*2)];
}

function dropGiftCase(){
  const rates = { secret:0.01, epic:0.20, exceptional:0.79 };
  const rarity = dropByRates(rates);
  if(rarity === "secret") return [{name:"–¢—Ä–∞–ª–∞–ª–µ—Ä–æ", img:"red2.png", rarity:"–°–µ–∫—Ä–µ—Ç–Ω–∞", type:"item", id:generateId()}, {name:"–¢—É–Ω–≥-–°–∞—Ö—É—Ä", img:"red3.png", rarity:"–°–µ–∫—Ä–µ—Ç–Ω–∞", type:"item", id:generateId()}][Math.floor(Math.random()*2)];
  if(rarity === "epic") return [{name:"–í–æ–ª—Ç–µ—Ä –í–∞–π—Ç", img:"purple1.png", rarity:"–ï–ø—ñ—á–Ω–∞", type:"item", id:generateId()}, {name:"–°—ñ–≥–º–∞", img:"purple2.png", rarity:"–ï–ø—ñ—á–Ω–∞", type:"item", id:generateId()}][Math.floor(Math.random()*2)];
  return [{name:"–°–∞—Ç–∞–Ω–∞", img:"blue2.png", rarity:"–í–∏–Ω—è—Ç–∫–æ–≤–∞", type:"item", id:generateId()}, {name:"–•–∞–º—Å—Ç–µ—Ä", img:"blue1.png", rarity:"–í–∏–Ω—è—Ç–∫–æ–≤–∞", type:"item", id:generateId()}][Math.floor(Math.random()*2)];
}

function promoMenu(){
  let html = `
    <h2>–í–≤–µ–¥—ñ—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥</h2>
    <input id="promoInput" placeholder="–ü—Ä–æ–º–æ–∫–æ–¥" style="width:200px;" />
    <button onclick="applyPromo()">–ê–∫—Ç–∏–≤—É–≤–∞—Ç–∏</button><br/>
    <button onclick="mainMenu()">–ù–∞–∑–∞–¥</button>
  `;
  document.getElementById("app").innerHTML = html;
}

function applyPromo(){
  const codeRaw = document.getElementById("promoInput").value.trim();
  if(!codeRaw) return alert("–í–≤–µ–¥—ñ—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥!");
  const code = strToB64(codeRaw);
  if(!promoCodesBase64[code]) return alert("–ù–µ–≤—ñ—Ä–Ω–∏–π –ø—Ä–æ–º–æ–∫–æ–¥!");
  const promo = promoCodesBase64[code];
  if(promo.type === "once" && usedPromos.includes(code)) return alert("–¶–µ–π –ø—Ä–æ–º–æ–∫–æ–¥ —É–∂–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ");
  promo.reward();
  if(promo.type === "once") usedPromos.push(code);
  saveData();
  mainMenu();
}

loginScreen();
