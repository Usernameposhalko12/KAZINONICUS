const accounts = {
  "ARSEN123": "ARSENPDIDDY123",
  "MatviyVes": "TON618",
  "Timasueta": "SUETOLOG",
  "Tematiks": "Fdnfanatik",
  "Koyakolo": "GIGACHAD",
  "Aloharbitrahnik123": "ARBITRAJ3",
  "TESTAC": "TESTAC",
  "NAZARK": "Geometrydash1488",
  "Egoroblox": "undertale52",
  "SIGMA228": "KOT1488",
  "BABULKA777": "KOT52"
};

const promoCodesBase64 = {
  "TklDVVMxMjM=": {type:"once", reward:()=>{addBalance(250); alert("–û—Ç—Ä–∏–º–∞–Ω–æ 250 –Ω—ñ–∫—É—Å—ñ–≤!");}},
  "TklLVVM0NTY=": {type:"once", reward:()=>{addBalance(100); alert("–û—Ç—Ä–∏–º–∞–Ω–æ 100 –Ω—ñ–∫—É—Å—ñ–≤!");}},
  "S0FWSUsxNTk=": {type:"once", reward:()=>{addBalance(100); alert("–û—Ç—Ä–∏–º–∞–Ω–æ 100 –Ω—ñ–∫—É—Å—ñ–≤!");}},
  "TklDVVMwMDE=": {type:"once", reward:()=>{addBalance(100); alert("–û—Ç—Ä–∏–º–∞–Ω–æ 100 –Ω—ñ–∫—É—Å—ñ–≤!");}},
  "TklDVVMwMDI=": {type:"once", reward:()=>{addBalance(100); alert("–û—Ç—Ä–∏–º–∞–Ω–æ 100 –Ω—ñ–∫—É—Å—ñ–≤!");}},
  "TklDVVMwMDM=": {type:"once", reward:()=>{addBalance(100); alert("–û—Ç—Ä–∏–º–∞–Ω–æ 100 –Ω—ñ–∫—É—Å—ñ–≤!");}},
  "TklDVVMwMDQ=": {type:"once", reward:()=>{addBalance(100); alert("–û—Ç—Ä–∏–º–∞–Ω–æ 100 –Ω—ñ–∫—É—Å—ñ–≤!");}},
  "TklDVVMwMDU=": {type:"once", reward:()=>{addBalance(100); alert("–û—Ç—Ä–∏–º–∞–Ω–æ 100 –Ω—ñ–∫—É—Å—ñ–≤!");}},
  "TklDVVMwMDY=": {type:"once", reward:()=>{addBalance(100); alert("–û—Ç—Ä–∏–º–∞–Ω–æ 100 –Ω—ñ–∫—É—Å—ñ–≤!");}},
  "TklDVVMwMDc=": {type:"once", reward:()=>{addBalance(100); alert("–û—Ç—Ä–∏–º–∞–Ω–æ 100 –Ω—ñ–∫—É—Å—ñ–≤!");}},
  "Q0FTRTc4OQ==": {type:"once", reward:()=>{addCase("box"); alert("–û—Ç—Ä–∏–º–∞–Ω–æ –∫–µ–π—Å –ë–æ–∫—Å!");}},
  "R0lGVDY1NA==": {type:"once", reward:()=>{addCase("gift"); alert("–û—Ç—Ä–∏–º–∞–Ω–æ –ø–æ–¥–∞—Ä—É–Ω–∫–æ–≤–∏–π –∫–µ–π—Å!");}},
  "Qk9YMzIx": {type:"unlimited", reward:()=>{addCase("box"); alert("–û—Ç—Ä–∏–º–∞–Ω–æ –∫–µ–π—Å –ë–æ–∫—Å!");}},
  "TU9ORVk5ODc=": {type:"unlimited", reward:()=>{addBalance(1000); alert("–û—Ç—Ä–∏–º–∞–Ω–æ 1000 –Ω—ñ–∫—É—Å—ñ–≤!");}},
  "R0lGVDY1NQ==": {type:"once", reward:()=>{addCase("gift"); alert("–û—Ç—Ä–∏–º–∞–Ω–æ –ø–æ–¥–∞—Ä—É–Ω–∫–æ–≤–∏–π –∫–µ–π—Å!");}}, // GIFT654 (–∑–∞–º—ñ–Ω–µ–Ω–æ UNGIFT1488 –Ω–∞ –æ–¥–Ω–æ—Ä–∞–∑–æ–≤–∏–π)
};

let currentUser = null;
let balance = 0;
let inventory = [];
let usedPromos = [];
let blockedItems = new Set();

const qualities = [
  {name:"–ü—Ä—è–º–æ –∑ —Ü–µ—Ö—É", chance:0.125},
  {name:"–ü—ñ—Å–ª—è –∫–æ–Ω—Å–µ—Ä–≤–∞—Ü—ñ—ó", chance:0.25},
  {name:"–ü—ñ—Å–ª—è —É—Ä–æ–∫—É", chance:0.40},
  {name:"–ó–Ω–æ—à–µ–Ω–∞", chance:0.225}
];

function saveData() {
  if (!currentUser) return;
  localStorage.setItem(currentUser + "_balance", balance);
  localStorage.setItem(currentUser + "_inventory", JSON.stringify(inventory));
  localStorage.setItem(currentUser + "_usedPromos", JSON.stringify(usedPromos));
  localStorage.setItem(currentUser + "_blockedItems", JSON.stringify(Array.from(blockedItems)));
}

function loadData() {
  if (!currentUser) return;
  balance = parseInt(localStorage.getItem(currentUser + "_balance")) || 0;
  inventory = JSON.parse(localStorage.getItem(currentUser + "_inventory")) || [];
  usedPromos = JSON.parse(localStorage.getItem(currentUser + "_usedPromos")) || [];
  blockedItems = new Set(JSON.parse(localStorage.getItem(currentUser + "_blockedItems")) || []);
}

function addBalance(amount) {
  balance += amount;
  saveData();
}

function generateId() {
  return Math.random().toString(36).substring(2, 9);
}

function strToB64(str) {
  return window.btoa(unescape(encodeURIComponent(str)));
}

function b64ToStr(b64) {
  return decodeURIComponent(escape(window.atob(b64)));
}

function loginScreen() {
  document.getElementById("app").innerHTML = `
    <h2>–í—Ö—ñ–¥ —É –∞–∫–∞—É–Ω—Ç</h2>
    <input id="login" placeholder="–õ–æ–≥—ñ–Ω" /><br />
    <input id="password" placeholder="–ü–∞—Ä–æ–ª—å" type="password" /><br />
    <button onclick="login()">–£–≤—ñ–π—Ç–∏</button>
  `;
}

function login() {
  const loginVal = document.getElementById("login").value.trim();
  const passVal = document.getElementById("password").value;
  if(accounts[loginVal] && accounts[loginVal] === passVal){
    currentUser = loginVal;
    loadData();
    mainMenu();
  } else {
    alert("–ù–µ–≤—ñ—Ä–Ω–∏–π –ª–æ–≥—ñ–Ω –∞–±–æ –ø–∞—Ä–æ–ª—å");
  }
}

function logout() {
  saveData();
  currentUser = null;
  balance = 0;
  inventory = [];
  usedPromos = [];
  blockedItems.clear();
  loginScreen();
}

function mainMenu() {
  saveData();
  let promoCodeToShow = "GIFT654"; // –∑–∞–º—ñ–Ω–µ–Ω–æ –∑ UNGIFT1488
  let html = `<h2>–í—ñ—Ç–∞—é, ${currentUser}</h2>`;
  html += `<p>–ë–∞–ª–∞–Ω—Å: ${balance} –Ω—ñ–∫—É—Å—ñ–≤</p>`;
  html += `
    <div style="display:flex; gap:20px; justify-content:center; flex-wrap:wrap;">
      <div style="text-align:center;">
        <img src="img/case_autumn.png" width="150" /><br/>
        <button onclick="buyCase('autumn')">–ö–µ–π—Å –û—Å—ñ–Ω—å25 (40 –Ω—ñ–∫—É—Å—ñ–≤)</button>
      </div>
      <div style="text-align:center;">
        <img src="img/case_box.png" width="150" /><br/>
        <button onclick="buyCase('box')">–ë–æ–∫—Å –û—Å—ñ–Ω—å25 (20 –Ω—ñ–∫—É—Å—ñ–≤)</button>
      </div>
      <div style="text-align:center;">
        <img src="img/case_gift.png" width="150" /><br/>
        <button disabled>–ü–æ–¥–∞—Ä—É–Ω–∫–æ–≤–∏–π –∫–µ–π—Å (–¢—ñ–ª—å–∫–∏ —á–µ—Ä–µ–∑ –ø—Ä–æ–º–æ-–∫–æ–¥)</button><br/>
        <small>–ü—Ä–æ–º–æ–∫–æ–¥ –¥–ª—è –ø–æ–¥–∞—Ä—É–Ω–∫–æ–≤–æ–≥–æ –∫–µ–π—Å–∞: ${promoCodeToShow}</small>
      </div>
    </div>
    <br />
    <button onclick="promoMenu()">üéÅ –í–≤–µ—Å—Ç–∏ –ø—Ä–æ–º–æ–∫–æ–¥</button><br/>
    <button onclick="showInventory()">üéí –Ü–Ω–≤–µ–Ω—Ç–∞—Ä (${inventory.length})</button><br/>
    <button onclick="logout()">üö™ –í–∏–π—Ç–∏</button>
  `;
  document.getElementById("app").innerHTML = html;
}

function buyCase(type){
  const cost = type === "autumn" ? 40 : (type === "box" ? 20 : 0);
  if(balance < cost){
    alert("–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –Ω—ñ–∫—É—Å—ñ–≤!");
    return;
  }
  balance -= cost;
  addCase(type);
  saveData();
  mainMenu();
}

function addCase(type){
  if(inventory.length >= 100){
    alert("–Ü–Ω–≤–µ–Ω—Ç–∞—Ä –∑–∞–ø–æ–≤–Ω–µ–Ω–∏–π!");
    return;
  }
  inventory.push({id: generateId(), type: "case", caseType: type});
  saveData();
}

function showInventory(){
  let html = `<h2>–Ü–Ω–≤–µ–Ω—Ç–∞—Ä</h2>`;
  if(inventory.length === 0){
    html += `<p>–Ü–Ω–≤–µ–Ω—Ç–∞—Ä –ø–æ—Ä–æ–∂–Ω—ñ–π.</p>`;
  } else {
    html += `<div style="display:flex; flex-wrap:wrap; gap:15px; justify-content:center;">`;
    inventory.forEach((item, idx) => {
      const isBlocked = blockedItems.has(item.id);
      if(item.type === "case"){
        html += `
          <div style="border:1px solid #999; padding:10px; width:150px; text-align:center; margin-bottom:10px;">
            <b>–ö–µ–π—Å: ${getCaseName(item.caseType)}</b><br/>
            <img src="img/case_${item.caseType}.png" width="120" /><br/>
            <button onclick="openCase(${idx})" ${isBlocked ? "disabled" : ""}>–í—ñ–¥–∫—Ä–∏—Ç–∏</button><br/>
            <button onclick="toggleBlock(${idx}); event.stopPropagation();">${isBlocked ? "–†–æ–∑–±–ª–æ–∫—É–≤–∞—Ç–∏" : "–ó–∞–±–ª–æ–∫—É–≤–∞—Ç–∏"}</button><br/>
            <button onclick="deleteItem(${idx}); event.stopPropagation();" ${isBlocked ? "disabled" : ""} style="margin-top:5px;">–í–∏–¥–∞–ª–∏—Ç–∏</button>
          </div>
        `;
      } else if(item.type === "item"){
        html += `
          <div style="border:1px solid #666; padding:10px; width:180px; text-align:center; background:#222; color:#fff; margin-bottom:10px; border-radius:8px;">
            <b>${item.name}</b><br/>
            <img src="img/${item.img}" width="120" /><br/>
            <div style="margin-top:5px; background:${getRarityColor(item.rarity)}; padding:3px 5px; border-radius:4px; font-weight:bold; color:#fff;">
              –†—ñ–¥–∫—ñ—Å—Ç—å: ${item.rarity}
            </div>
            <div style="margin-top:3px; background:${getQualityColor(item.quality)}; padding:2px 5px; border-radius:4px; font-weight:bold; color:#fff;">
              –Ø–∫—ñ—Å—Ç—å: ${item.quality}
            </div>
            ${item.premium ? `<div style="margin-top:3px; background:#f5d300; padding:2px 5px; border-radius:4px; font-weight:bold; color:#000;">–ü—Ä–µ–º—ñ—É–º!</div>` : ""}
            <button onclick="toggleBlock(${idx}); event.stopPropagation();" style="margin-top:5px;">${isBlocked ? "–†–æ–∑–±–ª–æ–∫—É–≤–∞—Ç–∏" : "–ó–∞–±–ª–æ–∫—É–≤–∞—Ç–∏"}</button><br/>
            <button onclick="deleteItem(${idx}); event.stopPropagation();" ${isBlocked ? "disabled" : ""} style="margin-top:5px;">–í–∏–¥–∞–ª–∏—Ç–∏</button>
          </div>
        `;
      }
    });
    html += "</div>";
  }
  html += `<br/><button onclick="mainMenu()">–ù–∞–∑–∞–¥</button>`;
  document.getElementById("app").innerHTML = html;
}

function toggleBlock(idx){
  if(!inventory[idx]) return;
  const id = inventory[idx].id;
  if(blockedItems.has(id)) blockedItems.delete(id);
  else blockedItems.add(id);
  saveData();
  showInventory();
}

function deleteItem(idx){
  if(!inventory[idx]) return;
  const id = inventory[idx].id;
  if(blockedItems.has(id)){
    alert("–ù–µ–º–æ–∂–ª–∏–≤–æ –≤–∏–¥–∞–ª–∏—Ç–∏ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∏–π –ø—Ä–µ–¥–º–µ—Ç!");
    return;
  }
  inventory.splice(idx, 1);
  saveData();
  showInventory();
}

function getCaseName(type){
  if(type === "autumn") return "–û—Å—ñ–Ω—å25";
  if(type === "box") return "–ë–æ–∫—Å";
  if(type === "gift") return "–ü–æ–¥–∞—Ä—É–Ω–∫–æ–≤–∏–π –∫–µ–π—Å";
  return "–ù–µ–≤—ñ–¥–æ–º–∏–π –∫–µ–π—Å";
}

function openCase(idx){
  if(!inventory[idx]) return;
  const item = inventory[idx];
  if(item.type !== "case") return;

  let drop = null;
  if(item.caseType === "autumn") drop = dropAutumnCase();
  else if(item.caseType === "box") drop = dropBoxCase();
  else if(item.caseType === "gift") drop = dropGiftCase();

  if(drop){
    inventory.splice(idx, 1);
    inventory.push(drop);
    saveData();
    alert(`–í–∞–º –≤–∏–ø–∞–ª–æ: ${drop.name} (${drop.rarity}${drop.premium ? ", –ü—Ä–µ–º—ñ—É–º" : ""})`);
    showInventory();
  }
}

function dropByRates(rates){
  const r = Math.random();
  let sum = 0;
  for(const key in rates){
    sum += rates[key];
    if(r < sum) return key;
  }
  // –ù–∞ –≤—Å—è–∫ –≤–∏–ø–∞–¥–æ–∫:
  return Object.keys(rates)[Object.keys(rates).length - 1];
}

function chooseQuality(){
  // –í–∏–±–∏—Ä–∞—î–º–æ —è–∫—ñ—Å—Ç—å –∑–∞ —à–∞–Ω—Å–∞–º–∏
  let r = Math.random();
  let cumulative = 0;
  for (const q of qualities){
    cumulative += q.chance;
    if (r < cumulative) return q.name;
  }
  return qualities[qualities.length - 1].name; // –Ω–∞ –≤—Å—è–∫ –≤–∏–ø–∞–¥–æ–∫
}

function isPremiumApplicable(quality){
  return quality !== "–ó–Ω–æ—à–µ–Ω–∞";
}

function maybePremium(quality){
  if(!isPremiumApplicable(quality)) return false;
  return Math.random() < 0.02; // 2% —à–∞–Ω—Å –ø—Ä–µ–º—ñ—É–º
}

function createItem(base){
  const quality = chooseQuality();
  const premium = maybePremium(quality);
  return {
    id: generateId(),
    type: "item",
    name: base.name,
    img: base.img,
    rarity: base.rarity,
    quality,
    premium
  };
}

// –ü—Ä–µ–¥–º–µ—Ç–∏ –ø–æ —Ä—ñ–¥–∫–æ—Å—Ç—ñ
const itemsPool = {
  secret: [
    {name:"–ë–æ–º–±–æ—Ä–¥—ñ—Ä–æ", img:"red1.png", rarity:"–°–µ–∫—Ä–µ—Ç–Ω–∞"},
    {name:"–¢—Ä–∞–ª–∞–ª–µ—Ä–æ", img:"red2.png", rarity:"–°–µ–∫—Ä–µ—Ç–Ω–∞"},
    {name:"–¢—É–Ω–≥-–°–∞—Ö—É—Ä", img:"red3.png", rarity:"–°–µ–∫—Ä–µ—Ç–Ω–∞"}
  ],
  epic: [
    {name:"–í–æ–ª—Ç–µ—Ä –í–∞–π—Ç", img:"purple1.png", rarity:"–ï–ø—ñ—á–Ω–∞"},
    {name:"–°—ñ–≥–º–∞", img:"purple2.png", rarity:"–ï–ø—ñ—á–Ω–∞"}
  ],
  exceptional: [
    {name:"–°–∞—Ç–∞–Ω–∞", img:"blue2.png", rarity:"–í–∏–Ω—è—Ç–∫–æ–≤–∞"},
    {name:"–•–∞–º—Å—Ç–µ—Ä", img:"blue1.png", rarity:"–í–∏–Ω—è—Ç–∫–æ–≤–∞"}
  ],
  common: [
    {name:"–ü–∞—Å—Ö–∞–ª–æ—á–Ω–∏–∫", img:"green1.png", rarity:"–ó–≤–∏—á–∞–π–Ω–∞"},
    {name:"–Ñ–Ω–æ—Ç", img:"green2.png", rarity:"–ó–≤–∏—á–∞–π–Ω–∞"}
  ]
};

function dropAutumnCase(){
  // –®–∞–Ω—Å–∏ –∑–∞ —Ä—ñ–¥–∫—ñ—Å—Ç—é –¥–ª—è –æ—Å—ñ–Ω–Ω—å–æ–≥–æ –∫–µ–π—Å—É
  const rates = {secret:0.01, epic:0.14, exceptional:0.35, common:0.50};
  let rarity = dropByRates(rates);

  // –í–∏–ø–∞–¥—ñ–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ –ø—Ä–∞–≤–∏–ª:
  if(rarity === "secret"){
    // –¢—ñ–ª—å–∫–∏ "–ë–æ–º–±–æ—Ä–¥—ñ—Ä–æ" –≤ –æ—Å—ñ–Ω–Ω—å–æ–º—É –∫–µ–π—Å—ñ
    return createItem(itemsPool.secret[0]);
  }
  if(rarity === "epic"){
    const choice = itemsPool.epic[Math.floor(Math.random() * itemsPool.epic.length)];
    return createItem(choice);
  }
  if(rarity === "exceptional"){
    const choice = itemsPool.exceptional[Math.floor(Math.random() * itemsPool.exceptional.length)];
    return createItem(choice);
  }
  // common
  const commonChoices = [itemsPool.common[0], itemsPool.common[1]];
  const choice = commonChoices[Math.floor(Math.random() * commonChoices.length)];
  return createItem(choice);
}

function dropBoxCase(){
  // –®–∞–Ω—Å–∏ –¥–ª—è –±–æ–∫—Å—É (—Å–µ–∫—Ä–µ—Ç–Ω—ñ –Ω–µ –ø–∞–¥–∞—é—Ç—å)
  const rates = {secret:0, epic:0.14, exceptional:0.35, common:0.51};
  let rarity = dropByRates(rates);

  if(rarity === "epic"){
    const choice = itemsPool.epic[Math.floor(Math.random() * itemsPool.epic.length)];
    return createItem(choice);
  }
  if(rarity === "exceptional"){
    const choice = itemsPool.exceptional[Math.floor(Math.random() * itemsPool.exceptional.length)];
    return createItem(choice);
  }
  // common
  const commonChoices = [itemsPool.common[0], itemsPool.common[1]];
  const choice = commonChoices[Math.floor(Math.random() * commonChoices.length)];
  return createItem(choice);
}

function dropGiftCase(){
  // –ü–æ–¥–∞—Ä—É–Ω–∫–æ–≤–∏–π –∫–µ–π—Å: —Å–µ–∫—Ä–µ—Ç–Ω—ñ –¢—Ä–∞–ª–∞–ª–µ—Ä–æ —Ç–∞ –¢—É–Ω–≥-–°–∞—Ö—É—Ä, —Ä–µ—à—Ç–∞ –±–µ–∑ –ø–∞—Å—Ö–∞–ª–æ—á–Ω—ñ–∫—ñ–≤
  const rates = {secret:0.01, epic:0.20, exceptional:0.79};
  let rarity = dropByRates(rates);

  if(rarity === "secret"){
    const secretChoices = [itemsPool.secret[1], itemsPool.secret[2]];
    const choice = secretChoices[Math.floor(Math.random() * secretChoices.length)];
    return createItem(choice);
  }
  if(rarity === "epic"){
    const choice = itemsPool.epic[Math.floor(Math.random() * itemsPool.epic.length)];
    return createItem(choice);
  }
  // exceptional only, –±–µ–∑ common
  const choice = itemsPool.exceptional[Math.floor(Math.random() * itemsPool.exceptional.length)];
  return createItem(choice);
}

function getRarityColor(rarity){
  switch(rarity){
    case "–°–µ–∫—Ä–µ—Ç–Ω–∞": return "#cc0033";
    case "–ï–ø—ñ—á–Ω–∞": return "#9933ff";
    case "–í–∏–Ω—è—Ç–∫–æ–≤–∞": return "#3399ff";
    case "–ó–≤–∏—á–∞–π–Ω–∞": return "#33cc33";
    default: return "#888";
  }
}

function getQualityColor(quality){
  switch(quality){
    case "–ü—Ä—è–º–æ –∑ —Ü–µ—Ö—É": return "#e6d31f";
    case "–ü—ñ—Å–ª—è –∫–æ–Ω—Å–µ—Ä–≤–∞—Ü—ñ—ó": return "#e67e22";
    case "–ü—ñ—Å–ª—è —É—Ä–æ–∫—É": return "#2980b9";
    case "–ó–Ω–æ—à–µ–Ω–∞": return "#555";
    default: return "#888";
  }
}

function promoMenu(){
  let html = `
    <h2>–í–≤–µ–¥—ñ—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥</h2>
    <input id="promoInput" placeholder="–ü—Ä–æ–º–æ–∫–æ–¥" /><br/>
    <button onclick="applyPromo()">–ê–∫—Ç–∏–≤—É–≤–∞—Ç–∏</button><br/><br/>
    <button onclick="mainMenu()">–ù–∞–∑–∞–¥</button>
  `;
  document.getElementById("app").innerHTML = html;
}

function applyPromo(){
  let code = document.getElementById("promoInput").value.trim();
  if(!code){
    alert("–í–≤–µ–¥—ñ—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥");
    return;
  }
  const codeB64 = strToB64(code);
  if(!promoCodesBase64[codeB64]){
    alert("–ü—Ä–æ–º–æ–∫–æ–¥ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");
    return;
  }
  if(promoCodesBase64[codeB64].type === "once" && usedPromos.includes(codeB64)){
    alert("–¶–µ–π –ø—Ä–æ–º–æ–∫–æ–¥ –≤–∂–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–∏–π");
    return;
  }
  promoCodesBase64[codeB64].reward();
  if(promoCodesBase64[codeB64].type === "once"){
    usedPromos.push(codeB64);
  }
  saveData();
  mainMenu();
}

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ª–æ–≥—ñ–Ω–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ
window.onload = () => {
  loginScreen();
};
